package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Vector;

import core.AttributeRating;
import core.Consumable;
import core.LoginException;
import core.Recommendation;

import client.ClientConsumable;
import client.ClientUser;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUIMyConsumables.java
 *
 * Created on Nov 21, 2011, 4:26:04 PM
 */
/**
 *
 * @author Russell Mull
 */
public class GUIMyConsumables extends javax.swing.JPanel 
{
	
	private List<Recommendation> ratedConsumables;
	
    /** Creates new form GUIMyConsumables */
    public GUIMyConsumables() 
    {
        initComponents();
    }
    
    //********************************************
    public Vector<String> getUserRatedConsumables()
    {
    	setRatedConsumables(DataAbstraction.getInstance().getUser().getRatedConsumables());
    	
    	Vector<String> consumables = new Vector<String>();
    
    	for(Recommendation r: DataAbstraction.getInstance().getUserRatedConsumables())
    	{
    		consumables.add(r.getConsumable().getName());
    	}
    	
    	return consumables;
    }
    
    public void populateConsumables()
    {
    	//TODO adding stuff to list happens here.
        consumablesList.setModel(new javax.swing.AbstractListModel() {
        	Vector<String> strings = getUserRatedConsumables();
        	public int getSize() { return strings.size(); }
        	public Object getElementAt(int i) { return strings.get(i); }
        });
    }
    
    public Recommendation getSelectedConsumable()
    {
    	Recommendation retVal = null;
    	try
    	{
    		retVal = getRatedConsumables().get(consumablesList.getSelectedIndex());
    	}
    	catch(Exception e)
    	{
    		//Do nothing. Apparently this is A-OK.
    	}
    	
    	return retVal;
    }
    
    //********************************************
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listScrollPane = new javax.swing.JScrollPane();
        consumablesList = new javax.swing.JList();
        ratingSlider = new javax.swing.JSlider();
        ratingLabel = new javax.swing.JLabel();
        setRatingButton = new javax.swing.JButton();
        consumablesLabel = new javax.swing.JLabel();

        
        listScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

//        //TODO adding stuff to list happens here.
//        consumablesList.setModel(new javax.swing.AbstractListModel() {
//        	Vector<String> strings = getAllConsumables();
//        	public int getSize() { return strings.size(); }
//        	public Object getElementAt(int i) { return strings.get(i); }
//        });
        consumablesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            	if(evt.getSource() == consumablesList)
                consumablesListValueChanged(evt);
            }
        });
        listScrollPane.setViewportView(consumablesList);

        ratingSlider.setMajorTickSpacing(1);
        ratingSlider.setMaximum(5);
        ratingSlider.setPaintLabels(true);
        ratingSlider.setPaintTicks(true);

        ratingLabel.setText("Rating:");

        setRatingButton.setText("Set Rating");
        setRatingButton.addActionListener(new ActionListener() 
        {
			public void actionPerformed(ActionEvent e) 
			{
				if(e.getSource() == setRatingButton)
				{
					int rating = ratingSlider.getValue();
					Recommendation selectedConsumableRating = getRatedConsumables().get(consumablesList.getSelectedIndex());
					selectedConsumableRating.setRevisedRating(rating);
					
					
					DataAbstraction.getInstance().getMainPane().mySearch.populateResults();
					DataAbstraction.getInstance().getMainPane().mySearch.updateAllRecommendations();
				}
			}	
        });

        consumablesLabel.setText("My Consumables");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(consumablesLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(setRatingButton)
                            .addComponent(ratingSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ratingLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(consumablesLabel)
                        .addGap(30, 30, 30)
                        .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(ratingLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ratingSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setRatingButton)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    //TODO list selections happen here.
	private void consumablesListValueChanged(javax.swing.event.ListSelectionEvent evt) 
	{
		Recommendation r = this.getSelectedConsumable();
		if(r != null && ratingSlider != null)
		{
			ratingSlider.setValue(r.getRevisedRating());
		}
		
		//AttributeRating a = DataAbstraction.getInstance().getAttributeAtIndex(attributesList.getSelectedIndex());
		//ratingSlider.setValue(a.getRating());
	}

    public void setRatedConsumables(List<Recommendation> ratedConsumables) {
		this.ratedConsumables = ratedConsumables;
	}

	public List<Recommendation> getRatedConsumables() {
		return ratedConsumables;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel consumablesLabel;
    private javax.swing.JList consumablesList;
    private javax.swing.JScrollPane listScrollPane;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JSlider ratingSlider;
    private javax.swing.JButton setRatingButton;
    // End of variables declaration//GEN-END:variables
}
