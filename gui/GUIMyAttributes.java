package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import core.Attribute;
import core.AttributeRating;
import core.Recommendation;

import client.ClientConsumable;
import client.ClientUser;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUIMyAttributes.java
 *
 * Created on Nov 29, 2011, 3:04:37 PM
 */
/**
 *
 * @author Russell Mull
 */
public class GUIMyAttributes extends javax.swing.JPanel {

	private List<AttributeRating> attributes;
	
    /** Creates new form GUIMyAttributes */
    public GUIMyAttributes() 
    {
        initComponents();
    }

    //********************************************
    public Vector<String> getRatedAttributes()
    {
    	Vector<String> attributes = new Vector<String>();
    	
    	
    	setAttributes(DataAbstraction.getInstance().getUser().getAllRatedAttributes());
    	
    	for(AttributeRating ar: getAttributes())
    	{
    		attributes.add(ar.getAttribute().getName());
    	}
    	
    	return attributes;
    }
    
    public void populateAttributes()
    {
    	  attributesList.setModel(new javax.swing.AbstractListModel() {
              Vector<String> strings = getRatedAttributes();
              public int getSize() { return strings.size(); }
              public Object getElementAt(int i) { return strings.get(i); }
          });
    }
    //********************************************
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listScrollPane = new javax.swing.JScrollPane();
        attributesList = new javax.swing.JList();
        ratingLabel = new javax.swing.JLabel();
        ratingSlider = new javax.swing.JSlider();
        setRatingButton = new javax.swing.JButton();
        attributesLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        newAttributeButton = new javax.swing.JButton();

        listScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

//        attributesList.setModel(new javax.swing.AbstractListModel() {
//            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
//            public int getSize() { return strings.length; }
//            public Object getElementAt(int i) { return strings[i]; }
//        });
        attributesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                attributesListValueChanged(evt);
            }
        });
        listScrollPane.setViewportView(attributesList);

        ratingLabel.setText("Rating:");

        ratingSlider.setMajorTickSpacing(1);
        ratingSlider.setMaximum(5);
        ratingSlider.setPaintLabels(true);
        ratingSlider.setPaintTicks(true);

        setRatingButton.setText("Set Rating");
        setRatingButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(e.getSource() == setRatingButton)
				{
					int rating = ratingSlider.getValue();
					
					
					AttributeRating selectedAttributeRating = getAttributes().get(attributesList.getSelectedIndex());
					
					selectedAttributeRating.setRating(rating);
					DataAbstraction.getInstance().getUser().setAttributeRating(selectedAttributeRating.getAttribute(), rating);
					
				}
			}
        	
        });

        attributesLabel.setText("My Attributes");
        
        newAttributeButton.setText("Add New Attribute");
        newAttributeButton.addActionListener(new ActionListener()
        {
        	public void actionPerformed(ActionEvent e)
        	{
        		GUIAddNewAttribute newAttribute = new GUIAddNewAttribute();
        	}
        });
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newAttributeButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ratingSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ratingLabel))
                            .addComponent(setRatingButton))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(ratingLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ratingSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setRatingButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newAttributeButton)
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void attributesListValueChanged(javax.swing.event.ListSelectionEvent e) 
	{
		AttributeRating a = DataAbstraction.getInstance().getAttributeAtIndex(attributesList.getSelectedIndex());
		
		ratingSlider.setValue(a.getRating());
	}



	public void setAttributes(List<AttributeRating> attributes) {
		this.attributes = attributes;
	}

	public List<AttributeRating> getAttributes() {
		return attributes;
	}



	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton newAttributeButton;
    private javax.swing.JLabel attributesLabel;
    private javax.swing.JList attributesList;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JScrollPane listScrollPane;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JSlider ratingSlider;
    private javax.swing.JButton setRatingButton;
    // End of variables declaration//GEN-END:variables
}
